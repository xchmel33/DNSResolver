1. non-recursive (recursive DNS resolver):
```
Authoritative: No, Recursive: No, Recursion Available : Yes, Truncated: No
Question section (1)
  www.github.com., A, IN
Answer section (1)
  www.github.com, CNAME, IN, 2191, github.com
Authority section (8)
  github.com, NS, IN, 151001, ns-520.awsdns-01.net
  github.com, NS, IN, 151001, dns3.p08.nsone.net
  github.com, NS, IN, 151001, dns1.p08.nsone.net
  github.com, NS, IN, 151001, ns-1707.awsdns-21.co.uk
  github.com, NS, IN, 151001, dns2.p08.nsone.net
  github.com, NS, IN, 151001, ns-421.awsdns-52.com
  github.com, NS, IN, 151001, dns4.p08.nsone.net
  github.com, NS, IN, 151001, ns-1283.awsdns-32.org
Additional section (1)
  ns-421.awsdns-52.com, A, IN, 151001, 205.251.193.165
```
Here's what a typical client-side resolver flow would look like:
- If the IP addresses of the NS records are given in the Additional section, pick one (either at random or the first one) and query it.
- If there is no response, try the next IP address in the Additional section.
- If no IPs are given, resolve the IP address of an NS record (this involves querying root or TLD servers), and then query the NS for the original DNS record you are interested in.
- If none of the NS servers respond, the resolution fails.

Final output ???

/* todo fix this:
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.71.10:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.9.11:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.3.10:53
Sent DNS query to 127.0.0.1:53
Sent DNS query to 147.229.8.12:53
Sent DNS query to 127.0.0.1:53
*/

Handling non-recursive queries & using gethostbyname() function:
- I assume all of the DNS query responses made recursively by client(our resolver) should be merged in one final output
- If the DNS server used to send the query to is specified by domain name instead of IP address, it would be handy to use gethostbyname() function to get the IP address of the server,
but this feels like cheating, so I decided not to use it (I also suggest mentioning this in the task description).
- Should I also include the results of querying the DNS server in the final output?

2. -x => reverse lookup
3. -6 => AAAA record
4. Vytvoření opakovatelných a automatizovaných testů:
    - ověří, že nový kód nerozbije dříve napsané a ověřené části programu (např. testy jednotkové, integrační a systémové).
5. fix errors based on tests
6. refactor code
7. write documentation
8. check usages of libraries, frameworks, etc.
9. check everything based on task (Makefile, FS, file extensions, etc.)
10. deploy